// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	multipart "mime/multipart"

	mock "github.com/stretchr/testify/mock"

	productsimages "altaStore/business/products_images"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// CreateImages provides a mock function with given fields: products_images, files, createdById
func (_m *Repository) CreateImages(products_images *productsimages.ProductImages, files *multipart.FileHeader, createdById int) error {
	ret := _m.Called(products_images, files, createdById)

	var r0 error
	if rf, ok := ret.Get(0).(func(*productsimages.ProductImages, *multipart.FileHeader, int) error); ok {
		r0 = rf(products_images, files, createdById)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteProductsImages provides a mock function with given fields: products_images, deletedById
func (_m *Repository) DeleteProductsImages(products_images *productsimages.ProductImages, deletedById int) error {
	ret := _m.Called(products_images, deletedById)

	var r0 error
	if rf, ok := ret.Get(0).(func(*productsimages.ProductImages, int) error); ok {
		r0 = rf(products_images, deletedById)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetListProductsImagesByIdProducts provides a mock function with given fields: id_products
func (_m *Repository) GetListProductsImagesByIdProducts(id_products int) (*[]productsimages.ProductImages, error) {
	ret := _m.Called(id_products)

	var r0 *[]productsimages.ProductImages
	if rf, ok := ret.Get(0).(func(int) *[]productsimages.ProductImages); ok {
		r0 = rf(id_products)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]productsimages.ProductImages)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id_products)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetProductsImagesById provides a mock function with given fields: id_products_image
func (_m *Repository) GetProductsImagesById(id_products_image int) (*productsimages.ProductImages, error) {
	ret := _m.Called(id_products_image)

	var r0 *productsimages.ProductImages
	if rf, ok := ret.Get(0).(func(int) *productsimages.ProductImages); ok {
		r0 = rf(id_products_image)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*productsimages.ProductImages)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id_products_image)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
